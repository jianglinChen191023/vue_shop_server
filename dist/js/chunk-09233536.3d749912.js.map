{"version":3,"sources":["webpack:///./src/network/request.js","webpack:///./src/network/cate.js","webpack:///./src/views/goods/Cate.vue?937e","webpack:///src/views/goods/Cate.vue","webpack:///./src/views/goods/Cate.vue?ac42","webpack:///./src/views/goods/Cate.vue?c825","webpack:///./src/views/goods/Cate.vue?35d0"],"names":["request","config","instance","axios","create","baseURL","timeout","interceptors","use","NProgress","start","headers","authorization","store","getters","token","err","response","res","done","data","getCateList","queryInfo","url","params","addCate","method","getCateById","id","updateCate","catName","cat_name","deleteCateById","render","_vm","this","_h","$createElement","_c","_self","attrs","path","_v","on","showAddCateDialog","ref","staticClass","cateList","columns","props","stripe","border","showHeader","showSummary","showRowHover","showIndex","treeType","isFold","expandType","selectionType","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","$event","showUpdateDialog","cat_id","deleteCate","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","addCateDialogClosed","addCateForm","addCateFormRules","model","value","callback","$$v","$set","expression","parentCateList","cascaderProps","parentCateChanged","selectedKeys","slot","updateDialogVisible","updateForm","updateRules","staticRenderFns","name","type","label","prop","template","cat_pid","children","updateId","created","methods","meta","status","newSize","newPage","getParentCateList","length","$refs","addCateFormRef","resetFields","validate","valid","updateFormRef","$confirm","confirmButtonText","cancelButtonText","message","component"],"mappings":"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","file":"js/chunk-09233536.3d749912.js","sourcesContent":["import axios from 'axios'\nimport store from '../store'\n\n// 导入 NProgress 包对应的 JS 和 CSS\nimport NProgress from 'nprogress'\n// 移动到 main-dev.js 中\n// import 'nprogress/nprogress.css'\n\n// 三次优化\nexport function request (config) {\n  // 1. 创建 axios 的实例\n  const instance = axios.create({\n    baseURL: 'https://lianghj.top:8888/api/private/v1',\n    timeout: 5000\n  })\n\n  // 2. axios 的拦截器\n  // 配置请求和响应拦截\n  instance.interceptors.request.use(config => {\n    // 显示进度条\n    NProgress.start()\n\n    // 1. 比如 config 中一些信息不符合服务器的要求\n    // 2. 比如每次发送网络请求时, 都希望在界面中显示一个请求的图标\n    // console.log('来到了 request 拦截 success 中')\n    // 添加请求头的 token 信息\n    config.headers.authorization = store.getters.token\n    return config\n  }, err => {\n    // console.log('来到了 request 拦截 failure 中')\n  })\n\n  // 响应拦截\n  instance.interceptors.response.use(res => {\n    // 隐藏进度条\n    NProgress.done()\n\n    // console.log('来到了 response 拦截 success 中')\n    return res.data\n  }, err => {\n    // console.log('来到了 response 拦截 failure 中')\n  })\n\n  // 3. 发送真正的网络请求\n  return instance(config)\n}\n","import { request } from './request'\n\n// 获取商品分类列表数据\nexport function getCateList (queryInfo) {\n  return request({\n    url: '/categories',\n    params: queryInfo\n  })\n}\n\n// 添加分类\nexport function addCate (data) {\n  return request({\n    url: '/categories',\n    method: 'post',\n    data: data\n  })\n}\n\n// 根据 id 查询分类\nexport function getCateById (id) {\n  return request({\n    url: `/categories/${id}`\n  })\n}\n\n// 编辑提交分类\nexport function updateCate (id, catName) {\n  return request({\n    url: `/categories/${id}`,\n    method: 'put',\n    data: {\n      cat_name: catName\n    }\n  })\n}\n\n// 根据 id 删除分类\nexport function deleteCateById (id) {\n  return request({\n    url: `/categories/${id}`,\n    method: 'delete'\n  })\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加分类\")])],1)],1),_c('zk-table',{ref:\"table\",staticClass:\"zkTable\",attrs:{\"sum-text\":\"sum\",\"index-text\":\"#\",\"data\":_vm.cateList,\"columns\":_vm.columns,\"stripe\":_vm.props.stripe,\"border\":_vm.props.border,\"show-header\":_vm.props.showHeader,\"show-summary\":_vm.props.showSummary,\"show-row-hover\":_vm.props.showRowHover,\"show-index\":_vm.props.showIndex,\"tree-type\":_vm.props.treeType,\"is-fold\":_vm.props.isFold,\"expand-type\":_vm.props.expandType,\"selection-type\":_vm.props.selectionType},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"三级\")])]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showUpdateDialog(scope.row.cat_id)}}},[_vm._v(\"编辑 \")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteCate(scope.row.cat_id)}}},[_vm._v(\"删除 \")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[3, 5, ,10, 15],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"提示\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称: \",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类: \"}},[_c('el-cascader',{attrs:{\"change-on-select\":\"\",\"clearable\":\"\",\"expand-trigger\":\"hover\",\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"编辑分类\",\"visible\":_vm.updateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.updateDialogVisible=$event}}},[_c('el-form',{ref:\"updateFormRef\",attrs:{\"model\":_vm.updateForm,\"rules\":_vm.updateRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.updateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.updateForm, \"cat_name\", $$v)},expression:\"updateForm.cat_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.updateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.updateCate}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 表格 -->\n      <zk-table class=\"zkTable\"\n                ref=\"table\"\n                sum-text=\"sum\"\n                index-text=\"#\"\n                :data=\"cateList\"\n                :columns=\"columns\"\n                :stripe=\"props.stripe\"\n                :border=\"props.border\"\n                :show-header=\"props.showHeader\"\n                :show-summary=\"props.showSummary\"\n                :show-row-hover=\"props.showRowHover\"\n                :show-index=\"props.showIndex\"\n                :tree-type=\"props.treeType\"\n                :is-fold=\"props.isFold\"\n                :expand-type=\"props.expandType\"\n                :selection-type=\"props.selectionType\">\n        <template slot=\"isok\" slot-scope=\"scope\">\n          <i v-if=\"scope.row.cat_deleted === false\" class=\"el-icon-success\" style=\"color: lightgreen\"></i>\n          <i v-else class=\"el-icon-error\" style=\"color: red\"></i>\n        </template>\n        <template slot=\"order\" slot-scope=\"scope\">\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\n          <el-tag type=\"success\" size=\"mini\" v-else-if=\"scope.row.cat_level === 1\">二级</el-tag>\n          <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\n        </template>\n        <template slot=\"opt\" slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showUpdateDialog(scope.row.cat_id)\">编辑\n          </el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteCate(scope.row.cat_id)\">删除\n          </el-button>\n        </template>\n      </zk-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[3, 5, ,10, 15]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n    <!--  添加分类对话框  -->\n    <el-dialog\n      title=\"提示\"\n      :visible.sync=\"addCateDialogVisible\"\n      width=\"50%\"\n      @close=\"addCateDialogClosed\">\n\n      <!-- 添加分类的表单 -->\n      <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\"\n               ref=\"addCateFormRef\" label-width=\"100px\">\n        <el-form-item label=\"分类名称: \" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"父级分类: \">\n          <!-- options 用来指定数据源\n               props: 用来指定配置对象\n               clearable: 设置输入框可清空\n               change-on-select: 允许选择任意一级的选项 -->\n          <el-cascader\n            change-on-select\n            clearable\n            expand-trigger=\"hover\"\n            v-model=\"selectedKeys\"\n            :options=\"parentCateList\"\n            :props=\"cascaderProps\"\n            @change=\"parentCateChanged\"></el-cascader>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!--  编辑分类的表单  -->\n    <el-dialog\n      title=\"编辑分类\"\n      :visible.sync=\"updateDialogVisible\"\n      width=\"50%\">\n\n      <!-- 编辑分类表单 -->\n      <el-form ref=\"updateFormRef\" :model=\"updateForm\" :rules=\"updateRules\" label-width=\"80px\">\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\n          <el-input v-model=\"updateForm.cat_name\"></el-input>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"updateDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"updateCate\">确 定</el-button>\n  </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getCateList, addCate, getCateById, updateCate, deleteCateById } from 'network/cate'\n\nexport default {\n  name: 'Cate',\n  data () {\n    return {\n      // 查询条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 商品分类的数据列表, 默认为空\n      cateList: [],\n      // 总数据条数\n      total: 0,\n      // 为 table 指定列的定义\n      columns: [{\n        label: '分类名称',\n        prop: 'cat_name'\n      }, {\n        label: '是否有效',\n        // 表示 将当前列定义为模板列\n        type: 'template',\n        // 表示 当前这一列使用模板名称\n        template: 'isok'\n      }, {\n        label: '排序',\n        // 表示 将当前列定义为模板列\n        type: 'template',\n        // 表示 当前这一列使用模板名称\n        template: 'order'\n      }, {\n        label: '操作',\n        // 表示 将当前列定义为模板列\n        type: 'template',\n        // 表示 当前这一列使用模板名称\n        template: 'opt'\n      }],\n      props: {\n        // 是否为多选类型表格\n        selectionType: false,\n        // 是否为展开行类型表格（为 True 时，需要添加名称为 '$expand' 的作用域插槽\n        // , 它可以获取到 row, rowIndex)\n        expandType: false,\n        // 是否显示数据索引\n        showIndex: true,\n        // 是否显示纵向边框\n        border: true,\n        // 鼠标悬停时，是否高亮当前行\n        showRowHover: false\n      },\n      // 控制添加分类对话框的显示与隐藏\n      addCateDialogVisible: false,\n      addCateForm: {\n        // 将要添加的分类的名称\n        cat_name: '',\n        // 父级分类的 Id\n        cat_pid: 0,\n        // 分类的等级, 默认要添加的1级分类\n        cat_level: 0\n      },\n      addCateFormRules: {\n        cat_name: [\n          {\n            required: true,\n            message: '请输入分类名称',\n            trigger: 'blur'\n          }\n        ]\n      },\n      // 父级分类的列表\n      parentCateList: [],\n      // 指定级联选择器的配置对象\n      cascaderProps: {\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children'\n      },\n      // 选中的父级分类的 Id 数组\n      selectedKeys: [],\n      // 要修改的数据 id - 编辑分类\n      updateId: '',\n      // 控制对话框的显示与隐藏 - 编辑分类\n      updateDialogVisible: false,\n      // 表单数据 - 编辑分类\n      updateForm: {\n        cat_name: ''\n      },\n      // 表单验证规则 - 编辑分类\n      updateRules: {\n        cat_name: [\n          {\n            required: 'true',\n            message: '分类名称不能为空!',\n            trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getCateList()\n  },\n  methods: {\n    // 获取商品分类数据\n    getCateList () {\n      getCateList(this.queryInfo).then(res => {\n        if (res.meta.status !== 200) {\n          this.$message.error('获取商品分类失败!')\n        }\n\n        this.$message.success('获取商品分类成功!')\n        // 把数据列表,赋值给 cateList\n        this.cateList = res.data.result\n        console.log(this.cateList)\n        // 为总数据条数赋值\n        this.total = res.data.total\n      })\n    },\n    // 接听 pageSize 改变\n    handleSizeChange (newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getCateList()\n    },\n    // 监听 pagenum 改变\n    handleCurrentChange (newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getCateList()\n    },\n    // 点击按钮, 展示 添加分类 对话框\n    showAddCateDialog () {\n      // 先获取父级分类的数据列表\n      this.getParentCateList()\n      // 再展示出对话框\n      this.addCateDialogVisible = true\n    },\n    // 选择项发生变化触发这个函数\n    parentCateChanged () {\n      // 如果 selectedKeys 数组中 length 大于0, 证明选中的父级分类\n      // 反之，就说明没有选中如何父级分类\n      if (this.selectedKeys.length > 0) {\n        // 父级分类的 Id\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n        // 为当前分类的等级赋值\n        this.addCateForm.cat_level = this.selectedKeys.length\n      } else {\n        // 父级分类的 Id\n        this.addCateForm.cat_pid = 0\n        // 为当前分类的等级赋值\n        this.addCateForm.cat_level = this.selectedKeys.length\n      }\n    },\n    // 获取父级分类的数据列表\n    getParentCateList () {\n      getCateList().then(res => {\n        if (res.meta.status !== 200) {\n          this.$message.error('获取父级分类数据失败!')\n        }\n\n        this.parentCateList = res.data\n      })\n    },\n    // 监听 添加分类对话框 的关闭事件, 重置表单数据\n    addCateDialogClosed () {\n      this.$refs.addCateFormRef.resetFields()\n      this.selectedKeys = []\n      this.addCateForm.cat_pid = 0\n      this.addCateForm.cat_level = 0\n    },\n    // 点击按钮, 添加新的分类\n    addCate () {\n      this.$refs.addCateFormRef.validate(valid => {\n        if (!valid) return\n        addCate(this.addCateForm).then(res => {\n          if (res.meta.status !== 201) {\n            return this.$message.error('添加分类失败!')\n          }\n\n          this.$message.success('添加分类成功!')\n          this.getCateList()\n          this.addCateDialogVisible = false\n        })\n      })\n    },\n    // 显示对话框 - 编辑分类\n    showUpdateDialog (id) {\n      getCateById(id).then(res => {\n        if (res.meta.status !== 200) {\n          return this.$message.error('查询分类失败!')\n        }\n\n        this.updateDialogVisible = true\n        this.updateForm = res.data\n      })\n    },\n    // 提交表单数据 - 编辑分类\n    updateCate () {\n      this.$refs.updateFormRef.validate(valid => {\n        if (valid) {\n          updateCate(this.updateForm.cat_id, this.updateForm.cat_name).then(res => {\n            if (res.meta.status !== 200) {\n              return this.$message.error('编辑分类失败!')\n            }\n\n            this.$message.success('编辑分类成功!')\n            this.updateDialogVisible = false\n            this.getCateList()\n          })\n        }\n      })\n    },\n    // 删除分类\n    deleteCate (id) {\n      this.$confirm('此操作将永久删除该分类, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteCateById(id).then(res => {\n          if (res.meta.status !== 200) {\n            return this.$message.error('删除分类失败!')\n          }\n\n          this.$message.success('删除分类成功!')\n          this.getCateList()\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.zkTable {\n  margin-top: 15px;\n}\n\n.el-cascader {\n  width: 100%\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=5d0cae3a&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=5d0cae3a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5d0cae3a\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cate.vue?vue&type=style&index=0&id=5d0cae3a&scoped=true&lang=css&\""],"sourceRoot":""}